# ExpertAgent Service Environment Variables
# Copy this file to .env and customize as needed: cp .env.example .env

# ===== ポート設定 =====
# Docker Compose: コンテナ内は常に8000（ホストからは8004でアクセス）
# ローカル開発: quick-start.shが自動的に8104に設定
HOST=0.0.0.0
PORT=8000

# ===== ログ設定 =====
LOG_LEVEL=INFO
LOG_DIR=/app/logs

# ===== MyVault統合（優先） =====
# API KeysはMyVaultで管理するため、.envには記載しません
MYVAULT_ENABLED=true
# MYVAULT_BASE_URLは起動スクリプトが自動設定
MYVAULT_SERVICE_NAME=expertagent
MYVAULT_SERVICE_TOKEN=CHANGE_THIS_TO_YOUR_EXPERTAGENT_TOKEN
MYVAULT_DEFAULT_PROJECT=expertagent

# ===== Ollama設定（ローカルLLM） =====
OLLAMA_URL=http://host.docker.internal:11434
OLLAMA_DEF_SMALL_MODEL=gemma3:27b-it-q8_0

# ===== モデル設定 =====
GRAPH_AGENT_MODEL=gemini-2.5-flash
PODCAST_SCRIPT_DEFAULT_MODEL=gpt-4o-mini
EXTRACT_KNOWLEDGE_MODEL=gemma3:27b-it-q8_0

# ===== MLX LLM Server（Macのみ） =====
MLX_LLM_SERVER_URL=http://host.docker.internal:8080

# ===== Admin API設定 =====
# Admin token for Google Auth and other protected endpoints
# Generate with: python3 -c "import secrets; print(secrets.token_urlsafe(32))"
ADMIN_TOKEN=CHANGE_THIS_TO_YOUR_ADMIN_TOKEN

# ===== その他 =====
SPREADSHEET_ID=
MAIL_TO=

# Note: API Keys（OPENAI_API_KEY, ANTHROPIC_API_KEY等）はMyVaultで管理します
# Note: Google APIs認証情報（GOOGLE_CREDENTIALS_JSON, GOOGLE_TOKEN_JSON）もMyVaultで管理します
# 　　　（従来のファイルパス管理 GOOGLE_APIS_TOKEN_PATH/GOOGLE_APIS_CREDENTIALS_PATH は非推奨）
# CommonUIのSecretsタブから登録してください
# Note: サービス間URLは起動スクリプトが自動設定するため、ここでは設定不要
