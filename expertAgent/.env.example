# ExpertAgent Service Environment Variables
# Copy this file to .env and customize as needed: cp .env.example .env

# ===== ポート設定 =====
# Docker Compose: コンテナ内は常に8000（ホストからは8004でアクセス）
# ローカル開発: quick-start.shが自動的に8104に設定
HOST=0.0.0.0
PORT=8000

# ===== ログ設定 =====
LOG_LEVEL=INFO
LOG_DIR=/app/logs

# ===== MyVault統合（優先） =====
# API KeysはMyVaultで管理するため、.envには記載しません
MYVAULT_ENABLED=true
# MYVAULT_BASE_URLは起動スクリプトが自動設定
MYVAULT_SERVICE_NAME=expertagent
MYVAULT_SERVICE_TOKEN=CHANGE_THIS_TO_YOUR_EXPERTAGENT_TOKEN
MYVAULT_DEFAULT_PROJECT=expertagent

# ===== Ollama設定（ローカルLLM） =====
OLLAMA_URL=http://host.docker.internal:11434
OLLAMA_DEF_SMALL_MODEL=gemma3:27b-it-q8_0

# ===== モデル設定 =====
GRAPH_AGENT_MODEL=gemini-2.5-flash
PODCAST_SCRIPT_DEFAULT_MODEL=gpt-4o-mini
EXTRACT_KNOWLEDGE_MODEL=gemma3:27b-it-q8_0

# ===== Job/Task Generator設定（Issue #111） =====
# 最大トークン数（全ノード共通）
JOB_GENERATOR_MAX_TOKENS=32768

# Job Generator各ノードのLLMモデル設定
# 対応プロバイダー: Claude (claude-*), GPT (gpt-*), Gemini (gemini-*)
# 各ノードで異なるモデルを指定可能（コスト最適化）
#
# タスク分解ノード（ユーザー要求を実行可能なタスクに分解）
JOB_GENERATOR_REQUIREMENT_ANALYSIS_MODEL=claude-haiku-4-5
# 評価ノード（タスク分解の品質を評価）
JOB_GENERATOR_EVALUATOR_MODEL=claude-haiku-4-5
# インターフェース定義ノード（タスクI/O用JSON Schema生成）
JOB_GENERATOR_INTERFACE_DEFINITION_MODEL=claude-haiku-4-5
# バリデーションノード（ワークフロー検証と修正提案）
JOB_GENERATOR_VALIDATION_MODEL=claude-haiku-4-5
#
# 使用例（コスト最適化パターン）:
# - タスク分解は高性能モデル: claude-sonnet-4-5, gpt-4o
# - 検証は軽量モデル: claude-haiku-4-5, gpt-4o-mini, gemini-2.5-flash
#
# 自動フォールバック機能（Issue #111）:
# - プライマリモデルが利用不可の場合、自動的に以下の順序でフォールバック
# - フォールバック順序: プライマリ → claude-haiku-4-5 → gpt-4o-mini → gemini-2.5-flash
# - 最大リトライ回数: 3回

# ===== MLX LLM Server（Macのみ） =====
MLX_LLM_SERVER_URL=http://host.docker.internal:8080

# ===== Admin API設定 =====
# Admin token for Google Auth and other protected endpoints
# Generate with: python3 -c "import secrets; print(secrets.token_urlsafe(32))"
ADMIN_TOKEN=CHANGE_THIS_TO_YOUR_ADMIN_TOKEN

# ===== その他 =====
SPREADSHEET_ID=
MAIL_TO=

# Note: API Keys（OPENAI_API_KEY, ANTHROPIC_API_KEY等）はMyVaultで管理します
# Note: Google APIs認証情報（GOOGLE_CREDENTIALS_JSON, GOOGLE_TOKEN_JSON）もMyVaultで管理します
# 　　　（従来のファイルパス管理 GOOGLE_APIS_TOKEN_PATH/GOOGLE_APIS_CREDENTIALS_PATH は非推奨）
# CommonUIのSecretsタブから登録してください
# Note: サービス間URLは起動スクリプトが自動設定するため、ここでは設定不要
