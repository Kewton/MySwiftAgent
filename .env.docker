# MySwiftAgent Environment Variables for Docker Compose
# This file is used when running services with docker-compose
# Services communicate using internal Docker network (service names)

# ============================================================================
# Docker Image Versions
# ============================================================================

# Service versions (automatically read from pyproject.toml/package.json if not set)
JOBQUEUE_VERSION=0.1.0
MYSCHEDULER_VERSION=0.2.0
EXPERTAGENT_VERSION=0.1.2
GRAPHAISERVER_VERSION=0.1.0
COMMONUI_VERSION=0.2.0
MYVAULT_VERSION=0.1.0

# Docker registry (for pushing/pulling images)
DOCKER_REGISTRY=ghcr.io/kewton

# ============================================================================
# MyVault Configuration (Secrets Management)
# ============================================================================

# Enable MyVault for secrets management (true/false)
MYVAULT_ENABLED=true

# MyVault Default Project
MYVAULT_DEFAULT_PROJECT=expertagent

# Master encryption key for AES-256-GCM (Base64-encoded 32 bytes)
# REQUIRED: Generate with: python -c "import secrets, base64; print('base64:' + base64.b64encode(secrets.token_bytes(32)).decode())"
MSA_MASTER_KEY=base64:CHANGE_THIS_TO_YOUR_GENERATED_KEY

# Service authentication tokens (REQUIRED)
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
MYVAULT_TOKEN_EXPERTAGENT=OboWWxpr90ytHQrLqbY-Cur3s-EPojbZ
MYVAULT_TOKEN_MYSCHEDULER=CHANGE_THIS_TO_SECURE_TOKEN
MYVAULT_TOKEN_JOBQUEUE=CHANGE_THIS_TO_SECURE_TOKEN
MYVAULT_TOKEN_COMMONUI=CHANGE_THIS_TO_SECURE_TOKEN

# ============================================================================
# API Keys (Fallback when MyVault is disabled)
# ============================================================================

# NOTE: If MYVAULT_ENABLED=true, API Keys are managed in MyVault
# These are fallback values when MyVault is disabled

# OpenAI API Key (for GPT models)
OPENAI_API_KEY=

# Anthropic API Key (for Claude models)
ANTHROPIC_API_KEY=

# Google API Key (for Gemini models)
GOOGLE_API_KEY=

# Serper API Key (for Google Search)
SERPER_API_KEY=

# ============================================================================
# ExpertAgent Configuration
# ============================================================================

# Mail Configuration
MAIL_TO=

# Model Configuration
GRAPH_AGENT_MODEL=gemini-2.5-flash
PODCAST_SCRIPT_DEFAULT_MODEL=gpt-4o-mini
EXTRACT_KNOWLEDGE_MODEL=gemma3:27b-it-q8_0

# Google APIs
GOOGLE_APIS_DEFAULT_PROJECT=default_project

# Google Spreadsheet
SPREADSHEET_ID=

# Ollama Configuration (Docker uses host.docker.internal to access host services)
OLLAMA_URL=http://host.docker.internal:11434
OLLAMA_DEF_SMALL_MODEL=gemma3:27b-it-q8_0

# ============================================================================
# Admin Tokens (for protected endpoints)
# ============================================================================

# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
EXPERTAGENT_ADMIN_TOKEN=CHANGE_THIS_TO_SECURE_TOKEN
GRAPHAISERVER_ADMIN_TOKEN=duxwHg0N-MrYHZD__T5zLUc50ATvlpXKmHN0xtkdxuY

# Service API Tokens (optional, for inter-service authentication)
JOBQUEUE_API_TOKEN=
MYSCHEDULER_API_TOKEN=

# ============================================================================
# Logging and Debug
# ============================================================================

# Log Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=DEBUG

# Enable Debug Mode (true, false)
DEBUG=true

# ============================================================================
# IMPORTANT: Service URLs for Docker Compose
# ============================================================================
# These URLs are used by commonUI to communicate with other services
# In Docker Compose, services use internal service names (not localhost)
# Docker Compose automatically maps these to the correct internal IPs

# NOTE: Do NOT set these variables here!
# They are automatically configured in docker-compose.yml using service names:
# - EXPERTAGENT_BASE_URL=http://expertagent:8000
# - GRAPHAISERVER_BASE_URL=http://graphaiserver:8000
# - MYVAULT_BASE_URL=http://myvault:8000
# - MYVAULT_SERVICE_NAME=commonui
# - MYVAULT_SERVICE_TOKEN is set from MYVAULT_TOKEN_COMMONUI
