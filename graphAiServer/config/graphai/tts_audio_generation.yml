version: 0.5
nodes:
  # Source node - receives user_input with theme and structure
  source: {}

  # Step 1: Build prompt to generate TTS-ready script
  build_script_prompt:
    agent: stringTemplateAgent
    inputs:
      theme: :source.theme
      structure: :source.structure
    params:
      template: |-
        あなたは優れたポッドキャスト台本作成の専門家です。
        以下のテーマと構成に基づいて、音声読み上げ（TTS）に適した台本を作成してください。

        テーマ: ${theme}

        構成: ${structure}

        # 制約条件
        - 台本はプロフェッショナルで明瞭な音声読み上げに適していること
        - 自然な間や強調を含めること
        - 約300文字程度の短い台本にすること
        - 日本語で出力すること
        - 出力は RESPONSE_FORMAT に従うこと。返却は JSON 形式で行い、コメントやマークダウンは含めないこと

        # RESPONSE_FORMAT:
        {
          "script": "音声読み上げ用の台本をここに記述",
          "audio_data_base64": "ダミー音声データ（Base64）",
          "file_name": "podcast_20251027.mp3",
          "duration_seconds": 60,
          "success": true
        }

  # Step 2: Generate script with mock TTS data
  generate_audio_with_script:
    agent: fetchAgent
    inputs:
      url: http://localhost:8104/aiagent-api/v1/aiagent/utility/jsonoutput
      method: POST
      body:
        user_input: :build_script_prompt
        model_name: gemini-2.5-flash
    timeout: 60000

  # Step 3: Format final output
  output:
    agent: copyAgent
    inputs:
      result:
        success: :generate_audio_with_script.result.success
        audio_data_base64: :generate_audio_with_script.result.audio_data_base64
        file_name: :generate_audio_with_script.result.file_name
        duration_seconds: :generate_audio_with_script.result.duration_seconds
        error_message: ""
    isResult: true
