version: 0.5
nodes:
  source: {}

  # Step 1: Build the analysis prompt using stringTemplateAgent
  # This node constructs a detailed prompt for LLM analysis of sales data
  build_analysis_prompt:
    agent: stringTemplateAgent
    inputs:
      raw_data: :source.raw_data_collection
    params:
      template: |-
        あなたは売上データ分析の専門家です。
        以下の生データを基に、過去5年間の売上データに対して定量的な分析を実行してください。

        生データ: ${raw_data}

        # 分析タスク
        1. 年次成長率を計算してください（前年比パーセンテージ）
        2. 分析期間全体の平均成長率を計算してください
        3. 売上傾向を詳細に記述してください（上昇傾向、下降傾向、安定傾向など）
        4. 急激な増減などの特異点を特定し、その理由を推測してください

        # 制約条件
        - データが不完全な場合は、利用可能なデータで分析を進めてください
        - 年次成長率は小数点第2位まで計算してください
        - 平均成長率も小数点第2位まで計算してください
        - 日本語で出力すること
        - 出力は RESPONSE_FORMAT に従うこと。返却は JSON 形式で行い、コメントやマークダウンは含めないこと

        # RESPONSE_FORMAT:
        {
          "success": true,
          "quantitative_analysis_summary": {
            "annual_growth_rates": [
              {
                "year_to": 2021,
                "growth_rate_percent": 5.25
              }
            ],
            "average_growth_rate_percent": 4.50,
            "sales_trend_description": "過去5年間の売上傾向の詳細な記述",
            "anomaly_description": "特異点に関する記述"
          },
          "error_message": ""
        }

  # Step 2: Call expertAgent jsonoutput API via fetchAgent
  # This node sends the constructed prompt to the LLM for analysis
  generate_analysis:
    agent: fetchAgent
    inputs:
      url: http://localhost:8104/aiagent-api/v1/aiagent/utility/jsonoutput
      method: POST
      body:
        user_input: :build_analysis_prompt
        model_name: gemini-2.5-flash
    timeout: 60000

  # Step 3: Format and return the final output
  # This node structures the LLM response to match the output interface schema
  output:
    agent: copyAgent
    inputs:
      result:
        success: :generate_analysis.result.success
        quantitative_analysis_summary: :generate_analysis.result.quantitative_analysis_summary
        error_message: :generate_analysis.result.error_message
    isResult: true
