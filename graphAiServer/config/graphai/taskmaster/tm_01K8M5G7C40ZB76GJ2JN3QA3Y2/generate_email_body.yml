version: 0.5
nodes:
  source: {}

  # Step 1: Build email generation prompt using stringTemplateAgent
  # This constructs a Japanese prompt for LLM to generate email subject and body
  build_email_prompt:
    agent: stringTemplateAgent
    inputs:
      text: :source.text
      file_name_prefix: :source.file_name_prefix
      voice_id: :source.voice_id
    params:
      template: |-
        あなたはメール本文生成エキスパートです。
        以下の情報を基に、ユーザーに送信するメールの件名と本文を生成してください。

        # 入力情報
        スクリプト本文: ${text}
        ファイル名プレフィックス: ${file_name_prefix}
        音声モデルID: ${voice_id}

        # 制約条件
        - メール件名は簡潔で、ファイル名プレフィックスを含めること
        - メール本文は丁寧で、スクリプト内容を適切に説明すること
        - 送信先メールアドレスはダミーアドレス（example@example.com）を使用すること
        - 日本語で出力すること
        - 出力は RESPONSE_FORMAT に従うこと。返却は JSON 形式で行い、コメントやマークダウンは含めないこと

        # RESPONSE_FORMAT:
        {
          "success": true,
          "subject": "メール件名",
          "body": "メール本文",
          "recipient": "example@example.com",
          "error_message": ""
        }

  # Step 2: Call expertAgent jsonoutput API via fetchAgent
  # This generates structured JSON output for email content
  generate_email_content:
    agent: fetchAgent
    inputs:
      url: http://localhost:8104/aiagent-api/v1/aiagent/utility/jsonoutput
      method: POST
      body:
        user_input: :build_email_prompt
        model_name: gemini-2.5-flash
    timeout: 60000

  # Step 3: Format final output with direct references
  # Maps LLM result to output interface schema
  output:
    agent: copyAgent
    inputs:
      result:
        success: :generate_email_content.result.success
        subject: :generate_email_content.result.subject
        body: :generate_email_content.result.body
        recipient: :generate_email_content.result.recipient
        error_message: :generate_email_content.result.error_message
    isResult: true
