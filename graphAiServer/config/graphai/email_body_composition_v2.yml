version: 0.5
nodes:
  # Input node - receives storage_path from user_input
  source: {}

  # Step 1: Build the email composition prompt with storage_path
  build_email_prompt:
    agent: stringTemplateAgent
    inputs:
      storage_path: :source.storage_path
    params:
      template: |-
        あなたはメール本文作成システムです。
        以下の情報を基に、ユーザーへの感謝、ポッドキャストの簡単な紹介、そして公開URLを含むメール本文と件名を作成してください。

        ポッドキャストファイルの公開リンク: ${storage_path}

        # 制約条件
        - ユーザーへの感謝の言葉を含めること
        - ポッドキャストの簡単な紹介を含めること
        - 公開URLを含めること
        - メール本文はHTML形式で作成すること
        - 件名は簡潔で分かりやすいものにすること
        - 日本語で出力すること
        - 出力は RESPONSE_FORMAT に従うこと。返却は JSON 形式で行い、コメントやマークダウンは含めないこと

        # RESPONSE_FORMAT:
        {
          "success": true,
          "subject": "メールの件名",
          "body_html": "<html><body>メール本文（HTML形式）</body></html>",
          "error_message": ""
        }

  # Step 2: Generate email content using LLM via expertAgent jsonoutput API
  generate_email_content:
    agent: fetchAgent
    inputs:
      url: http://localhost:8104/aiagent-api/v1/aiagent/utility/jsonoutput
      method: POST
      body:
        user_input: :build_email_prompt
        model_name: gemini-2.5-flash
    timeout: 60000

  # Step 3: Format and return the final output
  output:
    agent: copyAgent
    inputs:
      result:
        success: :generate_email_content.result.success
        subject: :generate_email_content.result.subject
        body_html: :generate_email_content.result.body_html
        error_message: :generate_email_content.result.error_message
    isResult: true
