# MySwiftAgent Environment Variables Example
# Copy this file to .env and fill in your actual values

# ============================================================================
# Docker Image Versions
# ============================================================================

# Service versions (automatically read from pyproject.toml/package.json if not set)
JOBQUEUE_VERSION=0.1.0
MYSCHEDULER_VERSION=0.2.0
EXPERTAGENT_VERSION=0.1.2
GRAPHAISERVER_VERSION=0.1.0
COMMONUI_VERSION=0.2.0
MYVAULT_VERSION=0.1.0

# Docker registry (for pushing/pulling images)
DOCKER_REGISTRY=ghcr.io/kewton

# ============================================================================
# MyVault Configuration (Secrets Management)
# ============================================================================

# Enable MyVault for secrets management (true/false)
MYVAULT_ENABLED=true

# MyVault master encryption key (Base64-encoded 32 bytes)
# Generate with: python -c "import secrets, base64; print('base64:' + base64.b64encode(secrets.token_bytes(32)).decode())"
MSA_MASTER_KEY=base64:YOUR_GENERATED_KEY_HERE

# Default project for secrets (optional - can be set per service)
MYVAULT_DEFAULT_PROJECT=expertagent

# Service authentication tokens (one per service)
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
MYVAULT_TOKEN_EXPERTAGENT=your_expertagent_token_here
MYVAULT_TOKEN_MYSCHEDULER=your_myscheduler_token_here
MYVAULT_TOKEN_JOBQUEUE=your_jobqueue_token_here
MYVAULT_TOKEN_COMMONUI=your_commonui_token_here

# ============================================================================
# API Keys
# ============================================================================
# NOTE: When MYVAULT_ENABLED=true, API keys are managed by MyVault.
# These environment variables serve as fallback when MyVault is disabled.

# OpenAI API Key (for GPT models)
OPENAI_API_KEY=your_openai_api_key_here

# Anthropic API Key (for Claude models)
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Google API Key (for Gemini models)
GOOGLE_API_KEY=your_google_api_key_here

# Serper API Key (for Google Search)
SERPER_API_KEY=your_serper_api_key_here

# Graph Agent Model
GRAPH_AGENT_MODEL=gemini-2.5-flash

# ============================================================================
# ExpertAgent Configuration
# ============================================================================

# Mail Configuration
MAIL_TO=your_email@example.com

# Model Configuration
PODCAST_SCRIPT_DEFAULT_MODEL=gpt-4o-mini
EXTRACT_KNOWLEDGE_MODEL=gemma3:27b-it-q8_0

# Google Spreadsheet (for data integration)
SPREADSHEET_ID=your_spreadsheet_id_here

# Ollama Configuration (local LLM server)
OLLAMA_URL=http://localhost:11434
OLLAMA_DEF_SMALL_MODEL=gemma3:27b-it-q8_0

# MLX LLM Server (Apple Silicon optimized)
MLX_LLM_SERVER_URL=http://localhost:8080

# ============================================================================
# Service Configuration
# ============================================================================
# Note: Service URLs are automatically configured in docker-compose.yml
# The variables below are only needed for local development outside Docker

# Database URLs (used in docker-compose.yml)
# JOBQUEUE_DB_URL is configured in docker-compose.yml, no need to override
# DATABASE_URL is configured in docker-compose.yml, no need to override

# ============================================================================
# Environment Settings
# ============================================================================
# Note: TZ, NODE_ENV, PYTHONPATH are configured in docker-compose.yml
# These are only needed if you run services outside Docker

# ============================================================================
# Optional: Additional Settings
# ============================================================================

# Logging Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Enable Debug Mode (true, false)
DEBUG=false
