name: CI - Feature/Fix Branches

on:
  pull_request:
    branches: [develop]
    types: [opened, synchronize, reopened]
    paths:
      - 'myscheduler/**'
      - '.github/workflows/**'
  push:
    branches:
      - 'feature/**'
      - 'fix/**'
      - 'refactor/**'
      - 'test/**'
      - 'vibe/**'
    paths:
      - 'myscheduler/**'
      - '.github/workflows/**'

defaults:
  run:
    working-directory: ./myscheduler

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run linting
        run: uv run ruff check .

      - name: Run type checking
        run: uv run mypy app/

      - name: Run tests
        run: uv run pytest tests/ -v --cov=app --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./myscheduler/coverage.xml
          directory: ./myscheduler
          fail_ci_if_error: false

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './myscheduler'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Build package
        run: |
          cd myscheduler
          uv build

      - name: Build Docker image
        run: |
          cd myscheduler
          docker build -t myscheduler:test .

      - name: Test Docker image
        run: |
          docker run --rm -d --name myscheduler-test -p 8000:8000 myscheduler:test
          sleep 10
          curl -f http://localhost:8000/health || exit 1
          docker stop myscheduler-test