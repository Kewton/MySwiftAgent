name: "Automatic Release and Tagging"

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  detect-changes:
    name: Detect Project Changes
    runs-on: ubuntu-latest
    outputs:
      changed_projects: ${{ steps.changes.outputs.projects }}
      has_changes: ${{ steps.changes.outputs.has_changes }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Detect changed projects
        id: changes
        run: |
          echo "üîç Detecting changed projects in this merge..."

          CHANGED_PROJECTS=""
          HAS_CHANGES="false"

          for project in myscheduler jobqueue docs; do
            if [[ -d "$project" ]]; then
              CHANGES=$(git diff HEAD~1 HEAD --name-only | grep "^$project/" || true)
              if [[ -n "$CHANGES" ]]; then
                echo "üì¶ Changes detected in $project"

                if [[ -z "$CHANGED_PROJECTS" ]]; then
                  CHANGED_PROJECTS="$project"
                else
                  CHANGED_PROJECTS="$CHANGED_PROJECTS,$project"
                fi
                HAS_CHANGES="true"
              fi
            fi
          done

          echo "projects=$CHANGED_PROJECTS" >> $GITHUB_OUTPUT
          echo "has_changes=$HAS_CHANGES" >> $GITHUB_OUTPUT

          if [[ "$HAS_CHANGES" == "true" ]]; then
            echo "‚úÖ Changed projects: $CHANGED_PROJECTS"
          else
            echo "‚ÑπÔ∏è No project changes detected in this merge"
          fi

  create-releases:
    name: Create Releases and Tags
    runs-on: ubuntu-latest
    needs: [detect-changes]
    if: needs.detect-changes.outputs.has_changes == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Process changed projects
        run: |
          IFS=',' read -ra PROJECTS <<< "${{ needs.detect-changes.outputs.changed_projects }}"

          for project in "${PROJECTS[@]}"; do
            echo "üöÄ Processing project: $project"

            if [[ ! -d "$project" ]]; then
              echo "‚ö†Ô∏è Project directory $project does not exist, skipping"
              continue
            fi

            if [[ ! -f "$project/pyproject.toml" ]]; then
              echo "‚ö†Ô∏è pyproject.toml not found in $project, skipping"
              continue
            fi

            VERSION=$(grep '^version = ' $project/pyproject.toml | sed 's/version = "\(.*\)"/\1/')
            if [[ -z "$VERSION" ]]; then
              echo "‚ùå Could not extract version from $project/pyproject.toml"
              continue
            fi

            TAG_NAME="$project/v$VERSION"
            echo "üìã Creating tag: $TAG_NAME"

            if git tag -l | grep -q "^$TAG_NAME$"; then
              echo "‚ö†Ô∏è Tag $TAG_NAME already exists, skipping"
              continue
            fi

            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"

            git tag -a "$TAG_NAME" -m "Release $project v$VERSION - Automated release"
            git push origin "$TAG_NAME"
            echo "‚úÖ Successfully created and pushed tag: $TAG_NAME"

            echo "Creating GitHub Release for $TAG_NAME..."
            gh release create "$TAG_NAME" \
              --title "üöÄ $project v$VERSION" \
              --notes "Release $project v$VERSION - Automated release generated with Claude Code" \
              --latest=$(if [[ "$project" == "myscheduler" ]]; then echo "true"; else echo "false"; fi)

            echo "‚úÖ Successfully created GitHub Release: $TAG_NAME"
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          echo "üéâ Automatic Release and Tagging completed successfully!"
          echo ""
          echo "üìã Processed projects: ${{ needs.detect-changes.outputs.changed_projects }}"