name: CI - Develop Integration

on:
  push:
    branches: [develop]
    paths:
      - 'myscheduler/**'
      - '.github/workflows/**'

defaults:
  run:
    working-directory: ./myscheduler

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/myscheduler

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run linting
        run: uv run ruff check .

      - name: Run type checking
        run: uv run mypy app/

      - name: Run tests
        run: uv run pytest tests/ -v --cov=app --cov-report=xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: myscheduler/coverage.xml

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run integration tests
        run: uv run pytest tests/integration/ -v --cov=app --cov-report=xml --cov-report=term

  build-check:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: [test, integration-test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Build package
        run: uv build

      - name: Build Docker image (test only)
        run: docker build -t myscheduler:test .

      - name: Test Docker image
        run: |
          docker run --rm -d --name myscheduler-test -p 8000:8000 myscheduler:test
          sleep 10
          curl -f http://localhost:8000/health || exit 1
          docker stop myscheduler-test

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Code complexity analysis
        run: |
          echo "üìä Analyzing code complexity"
          # radon cc --average app/ || echo "Radon not available, skipping complexity analysis"

      - name: Security analysis
        run: |
          echo "üîí Running security analysis"
          uv run ruff check . --select=S --ignore=S104

      - name: Import analysis
        run: |
          echo "üì¶ Analyzing imports"
          # Check for unused imports and circular dependencies

  notify:
    name: Quality Check Results
    runs-on: ubuntu-latest
    needs: [build-check, code-quality]
    if: always()
    defaults:
      run:
        working-directory: .

    steps:
      - name: Success notification
        if: needs.build-check.result == 'success' && needs.code-quality.result == 'success'
        run: |
          echo "‚úÖ All quality checks passed for develop branch"

      - name: Failure notification
        if: needs.build-check.result == 'failure' || needs.code-quality.result == 'failure'
        run: |
          echo "‚ùå Quality checks failed - review required"