[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "myscheduler"
version = "0.2.1"
description = "外部REST APIを柔軟にスケジュール実行するマイクロサービス"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    { name = "Your Name", email = "your.email@example.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "apscheduler>=3.10.4",
    "sqlalchemy>=2.0.23",
    "httpx>=0.25.2",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "respx>=0.20.2",
    "ruff>=0.1.7",
    "mypy>=1.7.0",
]

[project.scripts]
myscheduler = "app.main:app"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["S101"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = false  # Allow Any for external libraries
disallow_incomplete_defs = false  # Allow incomplete function definitions
disallow_untyped_defs = false  # Allow functions without type annotations
no_implicit_optional = false  # Allow implicit Optional types
warn_redundant_casts = true
warn_unused_ignores = true
ignore_missing_imports = true  # Ignore missing type stubs for external libraries

# Allow relaxed checking for external libraries
[[tool.mypy.overrides]]
module = "apscheduler.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
ignore_errors = true

# Override for HTTP service modules with complex type handling
[[tool.mypy.overrides]]
module = "app.services.http_service"
ignore_errors = true

[[tool.mypy.overrides]]
module = "app.services.job_executor"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]